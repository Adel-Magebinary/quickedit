<?php

/**
 * Implements hook_requirements().
 */
function edit_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
    // Check for the libraries module.
    if (!module_exists('libraries')) {
      $requirements['edit_libraries'] = array(
        'title' => t('Edit: Libraries module'),
        'value' => t('Libraries module is missing. Version 2.x or higher is required. Please check your version if you are experiencing trouble with the Edit module.'),
        'severity' => REQUIREMENT_ERROR,
      );
    }
    $requirements['edit_libraries_backbone'] = array(
      'title' => t('Edit: Backbone library'),
      'value' => t('The Backbone library is not present'),
      'severity' => REQUIREMENT_ERROR,
    );
    $requirements['edit_libraries_underscore'] = array(
      'title' => t('Edit: Underscore library'),
      'value' => t('The Underscore library is not present'),
      'severity' => REQUIREMENT_ERROR,
    );

    if (function_exists('libraries_get_path')) {
      // Check for Underscore.
      $path = libraries_get_path('underscore');
      if (!empty($path) && file_exists($path . '/underscore-min.js')) {
        $requirements['edit_libraries_underscore']['value'] = t('The Underscore library is present');
        $requirements['edit_libraries_underscore']['severity'] = REQUIREMENT_OK;
      }
      // Check for Backbone.
      $path = libraries_get_path('backbone');
      if (!empty($path) && file_exists($path . '/backbone-min.js')) {
        $requirements['edit_libraries_backbone']['value'] = t('The Backbone library is present');
        $requirements['edit_libraries_backbone']['severity'] = REQUIREMENT_OK;
      }
    }

    if (module_exists('ckeditor')) {
      $requirements['edit_libraries_ckeditor'] = array(
        'title' => t('Edit: CKEditor library'),
        'value' => t('The CKEditor library is compatible'),
        'severity' => REQUIREMENT_OK,
      );

      $ckeditor_version = _ckeditor_requirements_getinstalledversion();
      if (version_compare($ckeditor_version, '4.2.0') == -1) {
        $requirements['edit_libraries_ckeditor']['value'] = t('The CKEditor library is too old, please update to 4.2 or newer!');
        $requirements['edit_libraries_ckeditor']['severity'] = REQUIREMENT_ERROR;
      }

      // If the "Source" button is used in any of the CKEditor "profiles", then
      // also ensure that the "sourcedialog" plugin is available, because it
      // will be necessary for in-place editing.
      module_load_include('inc', 'ckeditor', 'includes/ckeditor.admin');
      $source_button_found = FALSE;
      $profiles = ckeditor_profiles_compile();
      foreach ($profiles as $format => $profile) {
        if (FALSE !== strpos($profile['toolbar'], "'Source'")) {
          $source_button_found = TRUE;
        }
      }
      if ($source_button_found) {
        $requirements['edit_libraries_ckeditor_sourcedialog'] = array(
          'title' => t('Edit: CKEditor\'s "Source" button is used'),
          'value' => t('The <a href="!sourcedialog-url">Source Dialog</a> CKEditor plugin is missing', array('!sourcedialog-url' => 'http://ckeditor.com/addon/sourcedialog')),
          'description' => t('This plugin is necessary to keep the "edit source" functionality while in-place editing.<br>Please <a href="!builder-url">create a custom build</a> of CKEditor that includes this plugin.', array('!builder-url' => 'http://ckeditor.com/builder')),
          'severity' => REQUIREMENT_ERROR,
        );
        $ckeditor_js = file_get_contents(libraries_get_path('ckeditor') . '/ckeditor.js');
        if (FALSE !== strpos($ckeditor_js, 'CKEDITOR.plugins.add("sourcedialog"')) {
          $requirements['edit_libraries_ckeditor_sourcedialog']['value'] = t('The Source dialog CKEditor plugin is present');
          $requirements['edit_libraries_ckeditor_sourcedialog']['severity'] = REQUIREMENT_OK;
          unset($requirements['edit_libraries_ckeditor_sourcedialog']['description']);
        }
      }
    }
  }

  return $requirements;
}
